<Window x:Class="ChatApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatApp" xmlns:ViewModel="clr-namespace:ChatClient.MVVM.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.DataContext>
        <ViewModel:MainViewModel/>
    </Window.DataContext>

    <!--Это наиболее мощный и часто используемый контейнер, напоминающий обычную таблицу. 
    Он содержит столбцы и строки, количество которых задает разработчик. 
    Для определения строк используется свойство RowDefinitions, 
    а для определения столбцов - свойство ColumnDefinitions:-->
    <Grid>
        
        <!--Ширина столбцов сетки-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--Определяет область, в которой можно упорядочивать дочерние элементы
        горизонтально либо вертикально относительно друг друга.-->
        <DockPanel>
            
            <!--Текстовое поле принимающее имя пользователя
            UpdateSourceTrigger: Односторонняя привязка от источника к приемнику практически мгновенно изменяет свойство приемника
            PropertyChanged: источник привязки обновляется сразу после обновления свойства в приемнике-->
            <TextBox Height="25"
                     DockPanel.Dock="Top"
                     Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged}" 
                     TextChanged="TextBox_TextChanged"/>
            
            <!--Кнопка для подключения клиента к серверу-->
            <Button Height="25"
                    DockPanel.Dock="Top"
                    Content="Connect"
                    Command="{Binding ConnectToServerCommand}"/>
            
            <!--Привязка списка к элементам обозреваемой коллекции из пользователей--> 
            <ListView ItemsSource="{Binding Users}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!--Привязка текста к имени пользователя-->
                        <TextBlock Text="{Binding UserName}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DockPanel>

        <!--StackPanel: Выравнивает дочерние элементы в одну линию, ориентированную горизонтально или вертикально.-->
        <StackPanel Grid.Column="1">
            <ListView Height="380"
                      ItemsSource="{Binding Messages}"/>

            <!--привязка-->
            <StackPanel Orientation="Horizontal">
                <TextBox Height="55"
                         Width="545"
                         VerticalContentAlignment="Center"
                         Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Width="55"
                        Content="Send"
                        Command="{Binding SendMessageCommand}"/>
            </StackPanel>
            
        </StackPanel>
    </Grid>
</Window>
